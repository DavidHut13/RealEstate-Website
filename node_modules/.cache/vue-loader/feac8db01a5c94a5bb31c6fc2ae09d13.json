{"remainingRequest":"/Users/michael/go/src/bitbucket.org/eloanlogic/auctionnetwork-website/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/michael/go/src/bitbucket.org/eloanlogic/auctionnetwork-website/src/GoogleMaps/googlemap.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/michael/go/src/bitbucket.org/eloanlogic/auctionnetwork-website/src/GoogleMaps/googlemap.vue","mtime":1565788336182},{"path":"/Users/michael/go/src/bitbucket.org/eloanlogic/auctionnetwork-website/node_modules/babel-loader/lib/index.js","mtime":1565788332070},{"path":"/Users/michael/go/src/bitbucket.org/eloanlogic/auctionnetwork-website/node_modules/cache-loader/dist/cjs.js","mtime":1565788332789},{"path":"/Users/michael/go/src/bitbucket.org/eloanlogic/auctionnetwork-website/node_modules/vue-loader/lib/index.js","mtime":1565788335752}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n\n\nexport default {\n    name: \"GoogleMap\",\n    props: ['searchProp', 'propertyData'],\n    data() {\n        return {\n            center: {\n                lat: 37.4220,\n                lng: -122.0841\n            },\n            markers: [],\n            places: [],\n        };\n    },\n    mounted() {\n        this.geoLocate();\n    },\n    watch: {\n        propertyData: {\n            handler() {\n                this.placeMarkers()\n            },\n            deep: true,\n        }\n    },\n    methods: {\n        placeMarkers() {\n            this.markers = [];\n            \n            if (this.propertyData.length > 0) {\n            for (let i = 0; i <  this.propertyData.length; i++) {\n                var marker = {\n                    lat: parseFloat(this.propertyData[i].propertyLatitude),\n                    lng: parseFloat(this.propertyData[i].propertyLongitude)\n                    };\n                this.markers.push({position: marker});\n                };\n                this.$refs.mapRef.panTo({\n                    lat: this.markers[0].position.lat,\n                    lng: this.markers[0].position.lng\n                })\n            }\n        },\n        geoLocate() {\n            if(navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(position => {\n                    this.center = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                });\n            }\n        }\n    }\n}\n",{"version":3,"sources":["googlemap.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"googlemap.vue","sourceRoot":"src/GoogleMaps","sourcesContent":["<template>\n<div>\n    <gmap-map ref=\"mapRef\" :center=\"center\" :zoom=\"8\" style=\"width:100%;  height: 100vh;\">\n        <gmap-marker :key=\"index\" v-for=\"(m, index) in markers\" :position=\"m.position\" @click=\"center=m.position\"></gmap-marker>\n    </gmap-map>\n</div>\n</template>\n\n<script>\n\nexport default {\n    name: \"GoogleMap\",\n    props: ['searchProp', 'propertyData'],\n    data() {\n        return {\n            center: {\n                lat: 37.4220,\n                lng: -122.0841\n            },\n            markers: [],\n            places: [],\n        };\n    },\n    mounted() {\n        this.geoLocate();\n    },\n    watch: {\n        propertyData: {\n            handler() {\n                this.placeMarkers()\n            },\n            deep: true,\n        }\n    },\n    methods: {\n        placeMarkers() {\n            this.markers = [];\n            \n            if (this.propertyData.length > 0) {\n            for (let i = 0; i <  this.propertyData.length; i++) {\n                var marker = {\n                    lat: parseFloat(this.propertyData[i].propertyLatitude),\n                    lng: parseFloat(this.propertyData[i].propertyLongitude)\n                    };\n                this.markers.push({position: marker});\n                };\n                this.$refs.mapRef.panTo({\n                    lat: this.markers[0].position.lat,\n                    lng: this.markers[0].position.lng\n                })\n            }\n        },\n        geoLocate() {\n            if(navigator.geolocation) {\n                navigator.geolocation.getCurrentPosition(position => {\n                    this.center = {\n                        lat: position.coords.latitude,\n                        lng: position.coords.longitude\n                    };\n                });\n            }\n        }\n    }\n}\n</script>\n\n<style>\n\n</style>\n"]}]}